{"version":3,"file":"index-NIfWtWfK.js","sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center mt-10 min-h-screen px-10\">\n    <h2 class=\"text-3xl font-semibold mb-6 text-gray-800\">Категории</h2>\n    <ul class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <li\n        v-for=\"category in visibleCategories\"\n        :key=\"category.id\"\n        class=\"bg-white shadow-md rounded-lg overflow-hidden transition-transform duration-300 transform hover:scale-105\"\n      >\n        <NuxtLink :to=\"getCategoryLink(category)\" class=\"block p-4\">\n          <img\n            v-if=\"category.category_image\"\n            :src=\"category.category_image\"\n            alt=\"\"\n            class=\"w-full h-40 object-contain mb-4 rounded-md\"\n          />\n          <h3 class=\"text-xl font-bold text-gray-800 mb-2\">\n            {{ category.locale[treeStore.selectedLanguage]?.cg_name }}\n          </h3>\n          <p class=\"text-sm text-gray-600\">\n            {{ category.locale[treeStore.selectedLanguage]?.cg_description }}\n          </p>\n        </NuxtLink>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { useTreeStore } from '../store/useTreeStore';\nimport type { TreeData, Child } from '../types/TreeData';\n\nconst treeStore = useTreeStore();\nconst selectedCategories = ref<Child[]>([]);\nconst selectedSubCategory = ref<Child | null>(null);\nconst categoryVisible = ref<boolean>(false);\nconst subCategoryVisible = ref<boolean>(false);\n\ntype Language = 'en' | 'ru' | 'fr';\n\nonMounted(async () => {\n  await treeStore.fetchTreeData();\n});\n\nconst visibleCategories = computed(() => {\n  return treeStore.treeData.filter(\n    (category) =>\n      category.locale[treeStore.selectedLanguage as Language]?.cg_name &&\n      category.locale[treeStore.selectedLanguage as Language]?.cg_description\n  );\n});\n\nwatch(visibleCategories, (newCategories: TreeData[]) => {\n  if (newCategories.length > 0 && !selectedCategories.value.length) {\n    selectCategory(newCategories[0]);\n  }\n});\n\nfunction selectCategory(category: TreeData) {\n  selectedCategories.value = category.childs || [];\n  selectedSubCategory.value = null;\n  categoryVisible.value = true;\n  subCategoryVisible.value = selectedCategories.value.length > 0;\n}\n\nfunction getCategoryLink(category: TreeData): string {\n  const link = category.locale[treeStore.selectedLanguage as Language]?.link;\n  return link ? `/${link}` : `/${category.id}`;\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAiCA,UAAM,YAAY,aAAa;AACzB,UAAA,qBAAqB,IAAa,EAAE;AACpC,UAAA,sBAAsB,IAAkB,IAAI;AAC5C,UAAA,kBAAkB,IAAa,KAAK;AACpC,UAAA,qBAAqB,IAAa,KAAK;AAQvC,UAAA,oBAAoB,SAAS,MAAM;AACvC,aAAO,UAAU,SAAS;AAAA,QACxB,CAAC,aACC;;AAAA,iCAAS,OAAO,UAAU,gBAA4B,MAAtD,mBAAyD,cACzD,cAAS,OAAO,UAAU,gBAA4B,MAAtD,mBAAyD;AAAA;AAAA,MAC7D;AAAA,IAAA,CACD;AAEK,UAAA,mBAAmB,CAAC,kBAA8B;AACtD,UAAI,cAAc,SAAS,KAAK,CAAC,mBAAmB,MAAM,QAAQ;AACjD,uBAAA,cAAc,CAAC,CAAC;AAAA,MAAA;AAAA,IACjC,CACD;AAED,aAAS,eAAe,UAAoB;AACvB,yBAAA,QAAQ,SAAS,UAAU,CAAC;AAC/C,0BAAoB,QAAQ;AAC5B,sBAAgB,QAAQ;AACL,yBAAA,QAAQ,mBAAmB,MAAM,SAAS;AAAA,IAAA;AAG/D,aAAS,gBAAgB,UAA4B;;AACnD,YAAM,QAAO,cAAS,OAAO,UAAU,gBAA4B,MAAtD,mBAAyD;AACtE,aAAO,OAAO,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}